<!DOCTYPE html>
<html>
<head>
    <title>The Angle Bracket</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/css/main.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@600&family=Libre+Franklin:wght@500&display=swap" rel="stylesheet"> 
</head>

<body>    
    <section class="introduction">
        <h1 id="title">The <b>Angle</b> Bracket</h1>
        <h2>A tournament of HTML tags</h2>

        <div>
            <p>The Angle Bracket was a tournament of HTML tags, conducted via 57 Twitter polls in 7 rounds, conducted over a week. Apart from the final, each round consisted of games of 4 tags (because Twitter polls can only have 4 options) in which the first and second place finishers made it to the next round.</p>
            </p>
        </div>
    </section>

    <section class="instructions">
        <p>In a proper bracket competition everybody is seeded evenly across the competition by how likely they are to win, and you can draw a cute little tree structure as players are eliminated. Unfortunately I didn't think of this in advance, and also I had no idea which tags would or wouldn't be popular, so every round I randomized the winners of the previous round into new games. So you can't draw a tree. I'm sorry. Next time.</p>
    
        <p>Scroll down to read the story of the tournament as it unfolded. You can click or tap any game to see the exact scores.
    </section>
    
    <section>
        <div class="tournament-round">
            <!-- look, I tried REALLY hard to avoid this additional span -->
            <h2><a href="https://twitter.com/seldo/status/1459959521896382466" target="_blank"><span>Round 1</span></a></h2>

            <p>This was the wild west round; every tag from the <a href="https://html.spec.whatwg.org/">HTML 5 spec</a> (uhhhh except <code>caption</code> because I accidentally left it out).</p>

            <%- include('_includes/round', {scores: scores, round: 1, size: 'small'}); %>
        </div>        

        <div class="commentary">
            <h2>Round 1 exits</h2>

            <p>As you'd expect from a completely randomized tag set, there were some real surprises in this round, but there are also a lot of tags of dubious value and they mostly exited in round 1. I've grouped the results into the categories defined for each tag in the spec.</p>

            <p>Because there are so many tags in round 1, per-tag commentary is hidden; you can click or tap any tag to see it.</p>

            <h3>Block tags: 50% eliminated</h3>
            <p>Some old favorites drew tough games and were eliminated early; <code>dt</code> was robbed, robbed I say.</p>
            <ul>
                <li>
                    <details>
                        <summary><code>dt</code> & <code>dd</code></summary>
                        <p>Originally Definition List, <code>dl</code> is now technically a <dfn>Description List</dfn>. But what it really is is a key-value map in HTML! It's cruelly under-used and I'm sad to see it go.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>figure</code> and <code>figcaption</code></summary>
                        <p>Used to show some vaguely-defined content that might need a caption to explain what it is. Very niche. Nobody's sad about these.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>hr</code></summary>
                        <p>Originally meant Horizontal Rule, but since that's not even slightly semantic it now means <dfn>thematic break</dfn> which is a phrase that I suppose has an h and an r in it somewhere.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>ol</code></summary>
                        <p>A really tough break to be put up against <code>header</code> and <code>table</code> in game 12. <code>ul</code> was much luckier and dominated game 21.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>pre</code></summary>
                        <p>A cruel rejection of a faithful workhorse. <code>pre</code> isn't semantic but it's <strong>useful</strong>, dammit.</p>
                    </details>
                </li>
            </ul>

            <h3>Embeds: 70% eliminated</h3>
            <p>It was a brutal first round for embeds of all kinds; they were the second most-eliminated category of tags.</p>
            
            <ul>
                <li>
                    <details>
                        <summary><code>embed</code></summary>
                        <p><code>embed</code> is how Netscape brought in content that was delivered by plug-ins. Nobody uses Netscape anymore, but more surprising is that the entire concept of plugins has essentially vanished. The final holdout, Flash, was <a href="https://en.wikipedia.org/wiki/Adobe_Flash#End_of_life">end of lifed in January 2021</a>.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>iframe</code></summary>
                        <p>This was a shocking result given <code>iframe</code>'s ubiquity across the web, losing to <code>head</code> and <code>main</code> in game 5. <code>head</code> is obviously a strong tag, but <code>main</code>? Despite its ubiquity, devs don't love <code>iframe</code>.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>object</code> & <code>param</code></summary>
                        <p><code>object</code> works like <code>embed</code> except it wasn't written in a hurry in the middle of the night by an overcaffeinated nerd at Netscape. It is similarly unhelpful in the modern, mostly plugin-free web, although people do use it to embed PDFs.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>video</code>, <code>source</code> & <code>track</code></summary>
                        <p>The Netflix tags! They include a passing glance at accessibility in the <code>track</code> tag which is routinely ignored.</p>
                    </details>
                </li>
            </ul>

            <h3>Forms: 42% eliminated</h3>

            <p>In a pattern we're going to see repeated several times, all the newer, accessibility-minded stuff got kicked out early. You bastards.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>datalist</code></summary>
                        <p>A select with built-in autocomplete! This is so good! But it was up against <code>meta</code> and <code>blockquote</code> in game 15, tough to beat.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>meter</code></summary>
                        <p>It... shows a little gauge. Honestly, not crying any tears about losing this mysterious little tag.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>optgroup</code></summary>
                        <p>Who is grouping options in dropdowns? Nobody, that's who.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>output</code></summary>
                        <p>This is supposed to make sections of your page that change as a result of user input more accessible by making them aria-live but there are some questions as to how useful that really is.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>progress</code></summary>
                        <p>It's like <code>meter</code> but it's expected to move and... why do we have this?</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>textarea</code></summary>
                        <p>How DARE you. One of the foundational tags of web apps, cruelly discarded. But it was up against <code>p</code> and <code>html</code> in game 11 so it had no chance.</p>
                    </details>
                </li>
            </ul>

            <h3>Metadata: 30% eliminated</h3>

            <p>With only a third of the tags in this category eliminated, it was one of the strongest early categories, although it included early warning signs for CSS fans.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>base</code></summary>
                        <p>Yeah, okay, it's useful to be able to set the base href, but we can all agree it's pretty niche.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>link</code></summary>
                        <p>A highly controversial result in game 1, round 1! <code>nav</code> and <code>section</code>, semantic but hardly fundamental, beat <code>link</code>, the core tag for (amongst other things) pulling in CSS. As we're going to see, CSS had a rough time in this tournament.</p>
                    </details>
                </li>
            </ul>

            <h3>Scripting: 40% eliminated</h3>

            <p>There aren't a lot of scripting tags to begin with, and it turns out only one we really care about.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>slot</code> & <code>template</code></summary>
                        <p>Powerful as they are, not a lot of people are authoring web components right now, so it was unsurprising to see these exit early.</p>
                    </details>
                </li>
            </ul>

            <h3>Sections: 20% eliminated</h3>

            <p>This was the strongest category in round 1, with passionate fans and a bunch of surprisingly close games.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>article</code></summary>
                        <p>Highly useful in a semantic sense but also confusingly similar to <code>section</code> in practice, <code>article</code> also drew a brutal first game against <code>a</code> and <code>img</code>, and there's no coming back from that.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>h3</code> & <code>h4</code></summary>
                        <p>In <a href="https://www.advancedwebranking.com/seo/html-study/">real usage data</a> <code>h3</code> and <code>h4</code> are far more popular than <code>h5</code> and <code>h6</code>, which both survived to round 2, so I'm going to say they were unlucky victims of the entirely random seeding of the first round.</p>
                    </details>
                </li>
            </ul>

            <h3>Tables: 66% eliminated</h3>

            <p>I feel like maybe the backlash against table layouts was learned too well; tables are nifty data structures and it was cruel to eviscerate the category in round 1.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>col</code> & <code>colgroup</code></summary>
                        <p>I'll be honest, I didn't know these tags existed until I read the spec. They're certainly nifty semantically, and to make styling columns possible, but they're hardly core to the table experience. They don't even hold data!</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>tfoot</code> & <code>thead</code></summary>
                        <p>Be honest, when was the last time you defined a footer for a table? Headers are a lot more useful but, still, hardly essential.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>td</code> & <code>tr</code></summary>
                        <p>Unlike the other four eliminated in this round, these <strong>are</strong> the very core of the table experience! Game 23 was controversial, with <code>li</code> and <code>pre</code> beating the arguably more useful <code>td</code> (and even more surprisingly, <code>span</code>). <code>tr</code>'s loss in game 23 made more sense as it was up against heavyweights <code>script</code> and <code>title</code>.</p>
                    </details>
                </li>
            </ul>

            <h3>Text: 73% eliminated</h3>

            <p>The most-eliminated tag category, round 1 saw the immediate exit of a huge number of marginally useful semantic tags, and also some big surprises.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>bdi</code> & <code>bdo</code></summary>
                        <p>Unless you regularly develop for languages that read right-to-left, you probably haven't used these tags. Internationalization was an early victim of the winnowing process of the tournament.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>data</code></summary>
                        <p>The purest of purely semantic tags, it's no surprise to see this exit early.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>dfn</code></summary>
                        <p>Essentially an inline equivalent of <code>dt</code>, a very niche tag.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>i</code></summary>
                        <p>Originally for italics, <code>i</code> is one of several early non-semantic tags that have been retconned into a different mean. It's now <dfn>Idiomatic text</dfn>, which we can all agree is some bullshit.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>kbd</code></summary>
                        <p>The distinction between <code>kbd</code> and <code>code</code> is pretty fine, so no wonder this exited early.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>mark</code></summary>
                        <p>Who uses this, other than search engines? Do they even use it?</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>q</code></summary>
                        <p>The non-block equivalent of <code>blockquote</code>; apparently browsers enclose the text in <q>quotes</q>? Neat. Not very useful.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>ruby</code>, <code>rp</code> & <code>rt</code></summary>
                        <p>Another victim of our manifest lack of concern for internationalization, all three of the ruby tags exited in round 1. <code>rp</code> takes my prize for being the most hacky solution to a markup problem I've ever seen, existing solely to hide the parentheses you need to include for your text to make sense in browsers that don't understand the <code>ruby</code> tag. <code>rt</code> holds the distinction of having the fewest votes of any tag in round 1, being absolutely crushed by <code>ul</code> in game 21.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>s</code></summary>
                        <p>The strikethrough element is not really a semantic tag, but it's so useful that it has survived many generations of HTML. Hoever, not useful enough to save it in game 22 against <code>em</code> and <code>dl</code></p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>samp</code></summary>
                        <p>I understand why <code>samp</code> and <code>output</code> are different but I am not sure how many authors are really going to care enough to think about that.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>small</code></summary>
                        <p>Absolutely not a semantic tag, it nevertheless remains useful to be able to define "small print" as actually being small, so this tag has survived in the spec. But not in the tournament.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>sub</code> & <code>sup</code></summary>
                        <p>Venerable survivors of HTML's academic origins, superscript and subscript aren't really semantic but they're useful as hell. Both drew tough opponents in round 1: <code>sub</code> lost to <code>select</code> and <code>summary</code>, <code>sup</code> to <code>script</code> and <code>title</code>. No dishonor in defeat to such opponents.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>u</code></summary>
                        <p>Previously the underline element, an entirely non-semantic but ancient tag, <code>u</code> is now technically the <dfn>Unarticulated Annotation</dfn> element which, surprise, usually renders as an underline without upsetting semantic purists.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>var</code></summary>
                        <p>An obscure tag with academic origins, nearly useless except to mathematicians, <code>var</code> scored the second lowest of any tag in round one. Only the deeply unloved <code>rt</code> scored lower.</p>
                    </details>
                </li>
            </ul>

            <h3>Random other tags</h3>

            <ul>
                <li>
                    <details>
                        <summary><code>del</code> & <code>ins</code></summary>
                        <p>Who the fuck is using these anyway, Google Docs?</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>summary</code></summary>
                        <p>Although <code>summary</code> didn't make it, its (still useful) parent <code>details</code> survived! A lovely little combo, you are reading content in a summary/details element pair right this second. It was also a close game: <code>summary</code> lost to <code>option</code> by just 0.1%.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>map</code></summary>
                        <p>The oldest of old school, the image map, cruelly cut down. Its child <code>area</code> survived, but mostly as a result of being in an extremely weak game 14.</p>
                    </details>
                </li>
            </ul>
        </div>

        <div class="tournament-round">
            <h2><a href="https://twitter.com/seldo/status/1460345542580400131"><span>Round 2</span></a></h2>

            <p>Less chaotic than round 1, less brutal than round 3, round 2 was a temporary calm before the storm.</p>

            <%- include('_includes/round', {scores: scores, round: 2, size: 'small'}); %>
        </div>

        <div class="commentary">
            <h2>Round 2 exits</h2>

            <p>Interesting that related tags often leave in the same round -- <code>dt</code> and <code>dd</code>, the <code>ruby</code> trio, <code>sub</code> and <code>sup</code>, <code>del</code> and <code>ins</code> went in round 1, but <code>fieldset</code> and <code>legend</code> both made it to round 2 and then got eliminated at the same time, as did all the <code>h*</code> tags, and <code>em</code> and <code>strong</code>.</p>

            <h3>Block: 50% eliminated</h3>

            <ul>
                <li>
                    <details>
                        <summary><code>blockquote</code></summary>
                        <p>An oldie and a goodie, <code>blockquote</code> was up against <code>style</code> and <code>head</code> in game 3 and there's no shame losing to those heavyweights.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>dl</code></summary>
                        <p>Since <code>dt</code> and <code>dd</code> were eliminated in round 1, the writing was on the wall for <code>dl</code>, but I was glad to see people appreciated its value enough to get past round 1. It lost game 7 to <code>script</code> and <code>marquee</code>, both of whom went very far indeed.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>main</code></summary>
                        <p>Look, nobody gives a shit about <code>main</code>. I have no idea how it managed to beat <code>iframe</code> in round 1.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>menu</code></summary>
                        <p>A cute little semantic tag, <code>menu</code> was never going to be a finalist, and it drew <code>ul</code> and <code>table</code> in game 11.</p>
                    </details>
                </li>
            </ul>

            <h3>Embeds: 66% eliminated</h3>

            <p>It was another tough round for the unloved embed category.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>audio</code></summary>
                        <p>Where would podcasts be without the stalwart <code>audio</code> tag? We're going to find out, because we just got rid of it.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>picture</code></summary>
                        <p>Complex but powerful, picture lets you load images that look good on any device at the cost of a great deal of tedious markup. Your favorite framework's image-optimization feature probably uses this tag, but actual humans are probably just using <code>img</code>.</p>
                    </details>
                </li>
            </ul>

            <h3>Forms: 25% eliminated</h3>

            <p>After a tough round 1, the remaining tags in the Forms category were pretty strong in round 2.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>fieldset</code> & <code>legend</code></summary>
                        <p>Clever but only occasionally useful, if your form is so complicated that you need <code>fieldset</code>, you're probably doing something wrong. With it goes <code>legend</code>, which even people who use <code>fieldset</code> seldom use.</p>
                    </details>
                </li>
            </ul>

            <h3>Scripting: 33% eliminated</h3>

            <p>Given that the only tag eliminated in the scripting category was <code>noscript</code>, I think it's arguable to say that no actual scripting tags were eliminated, presaging the strength of web app voters in later rounds.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>noscript</code></summary>
                        <p>No chance.</p>
                    </details>
                </li>        
            </ul>

            <h3>Sections: 58% eliminated</h3>

            <p>Almost no section tags got eliminated in round 1, but round 2 was a real winnower for this category.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>address</code></summary>
                        <p>Honestly kind of weird that the spec considers this a section rather than a block or a text element, but what do I know? Confidently semantic, address was too pure for this world.</p>
                    </details>
                </li>        
                <li>
                    <details>
                        <summary><code>aside</code></summary>
                        <p>A delightfully semantic tag, game 12 had it up against <code>span</code> and <code>title</code> and that's a tough game.</p>
                    </details>
                </li>        
                <li>
                    <details>
                        <summary><code>h1</code>, <code>h2</code>, <code>h5</code>, <code>h6</code> and <code>hgroup</code></summary>
                        <p><code>h3</code> and <code>h4</code> were unlucky in round 1 but round 2 decided none of the header tags were essential, not even <code>h1</code>, which lost to <code>div</code> (obviously) and <code>section</code> (surprisingly) in game 5.</p>
                    </details>
                </li>
            </ul>

            <h3>Tables: 66% eliminated</h3>

            <p>Round 2 saw the exits of <code>table</code>'s remaining child tags, leaving it non-functional but a symbolic standard-bearer for at least one more round.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>tbody</code></summary>
                        <p>If nobody's using <code>thead</code> and <code>tfoot</code>, nobody's using <code>tbody</code>. It only survived because game 7 in round 1 was a very weak match.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>th</code></summary>
                        <p>With <code>th</code> eliminated, <code>table</code> was the last tag standing in the category.</p>
                    </details>
                </li>                
            </ul>

            <h3>Text: 78% eliminated</h3>

            <p>Text tags were once again the weakest category in round 2, with nearly 4 in 5 tags kicked out this round.</p>

            <ul>
                <li>
                    <details>
                        <summary><code>abbr</code></summary>
                        <p>Old, solidly semantic but ultimately somewhat unloved, we say goodbye to <code>abbr</code>.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>b</code></summary>
                        <p>Like <code>i</code> and <code>u</code>, the tag formerly known as Bold has been retroactively given a new name and a semantic purpose, it is now the comically try-hard <dfn>Bring Attention To</dfn> element which, very luckily, means it renders as bold in most browsers. It lost game 11 to <code>ul</code> and <code>table</code>, which seems fair.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>br</code></summary>
                        <p>The line break element is still called the line break element, unlike similar older tags which have been renamed. A convenient, get-it-done tool in any developer's toolset, it lost game 9 to <code>button</code> and <code>label</code>, a sign of things to come.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>cite</code></summary>
                        <p>A throwback to the early academic origins of HTML, when Tim expected most people would be writing scientific papers and would need to cite each other all the time, this tag still gets a lot of use because people really <strong>do</strong> cite papers online all the time, in addition to everything else we now use the web for.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>em</code> & <code>strong</code></summary>
                        <p>The semantic replacements for <code>i</code> and <code>b</code> that never fully replaced either, nobody's too broken up about seeing these go.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>time</code></summary>
                        <p>An adorable, pure-hearted little semantic tag, it was up against <code>select</code> and <code>header</code> in game 13, so it was time to go.</p>
                    </details>
                </li>
            </ul>

            <h3>Randos</h3>

            <ul>
                <li>
                    <details>
                        <summary><code>details</code></summary>
                        <p>If you've looked at the markup of this site you'll know I'm a big fan of <code>details</code>, but sadly the public was not swayed.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>dialog</code></summary>
                        <p>A stylable equivalent to the much-maligned JavaScript <code>alert()</code> box, <code>dialog</code> is not supported in the current version of Firefox and Safari is still working on it. I imagine there's an entertaining debate going on inside Mozilla about why they shouldn't support making modals.</p>
                    </details>
                </li>
                <li>
                    <details>
                        <summary><code>area</code></summary>
                        <p><code>area</code> only survived to round 2 by drawing extremely weak opponents in round 1, and with <code>map</code> already eliminated there was no chance for it.</p>
                    </details>
                </li>                        
            </ul>
        </div>

        <div class="tournament-round">
            <h2><a href="https://twitter.com/seldo/status/1460708012482465792"><span>Round 3</span></a></h2>

            <p>In round 2 it was sad to see some tags go, but round 3 was where things got truly brutal.</p>

            <%- include('_includes/round', {scores: scores, round: 3, size: 'small'}); %>
        </div>
        
        <div class="commentary">
            <h2>Round 3 exits</h2>

            <p>Only 12 tags exited in round 3, so I'm not comparing by category any more, we'll go tag by tag.</p>

            <ul>
                <li>
                    <details open>
                        <summary><code>li</code> & <code>ul</code></summary>
                        <p>They made it to round 3, but lists are gone. In this new pared-down HTML you're gonna have to add bullets to divs.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>label</code></summary>
                        <p>Accessibility breathes its last as the final tag that attempts to help non-visual browsers falls in game 2 to <code>img</code> and <code>html</code>.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>select</code> & <code>option</code></summary>
                        <p>You want a drop-down menu? Fuck you. Build it in JavaScript.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>head</code>, <code>title</code> & <code>meta</code></summary>
                        <p>All the remaining meta tags fell out in the same round, each in different games. This version of HTML is not for search engines either.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>header</code> & <code>footer</code></summary>
                        <p>Continuing the pattern of paired elements exiting simultaneously, these semantic stalwarts exited in games 6 and 7.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>section</code></summary>
                        <p>It outlasted many of its confusingly-similar peers, but no more sections for you. Only divs!</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>code</code></summary>
                        <p>The second-to-last semantic tag is out of the tournament, losing to <code>body</code> and <code>script</code> in game 4, but <code>code</code> is the MVP of this particular website; every single tag is a <code>code</code> tag.</p>
                    </details>
                </li>
            </ul>
        </div>

        <div class="tournament-round">
            <h2><a href="https://twitter.com/seldo/status/1461066159613042688"><span>Round 4</span></a></h2>

            <p>The tags that survived to round 4 showed some clear trends:
                <ul class="actual-list">
                    <li>a desire for web app functionality over anything else. The remaining tags can make a solid web app, but without lists, and <code>table</code> having no child elements, you'd be hard pressed to mark up any kind of document.</li>
                    <li>nobody cares about marking up inline text semantically, all of those tags are gone</li>
                    <li>in fact nearly all purely semantic tags are gone; <code>nav</code> is the last tag standing</li>
                    <li>all pretense of accessibility is gone with <code>label</code> the last to go</li>
                    <li>we don't care about discoverability; all the meta tags are out including <code>meta</code> itself</li>
                    <li>external stylesheets are gone; you have to use <code>style</code>, another warning sign for CSS as we continue to strip features from the language.</li>
                </ul>
            </p>
            <p><code>span</code> and <code>form</code> lost their games in round 3, but to make it an even 4 tags per round they got promoted to round 4 on the basis of being the highest-scored of the losing tags.</p>
            <p>Also clear by this point was the groundswell of fan support for <code>marquee</code>, with dozens of people drawing attention to the tournament specifically to vote for it.</p>

            <%- include('_includes/round', {scores: scores, round: 4, size: 'big'}); %>
        </div>
        
        <div class="commentary">
            <h2>Round 4 exits</h2>

            <ul>
                <li>
                    <details open>
                        <summary><code>p</code></summary>
                        <p><code>p</code> barely counts as a semantic tag but it was still too semantic for the brutal, bare-bones HTML of round 5, so away it goes.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>form</code></summary>
                        <p><code>form</code> losing to <code>input</code> makes it impossible to submit a form using HTML, but still lets you build forms in JavaScript, like in React, and the preferences of JavaScripters are definitely making themselves felt now.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>style</code></summary>
                        <p>Another tragedy. Now if you want to style stuff you're going to have to do it using <code class="attr">style</code> attributes. Not coincidentally, adding style via attributes is another React idiom.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>html</code></summary>
                        <p>How <strong>dare</strong> you. As everyone points out, the <code>html</code> tag is superfluous, because it's always implied if you leave it out. But still! It's the spiritual root of the whole thing!</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>body</code></summary>
                        <p>With <code>html</code> already gone, it was clear <code>body</code>, another implied tag, wasn't going to make it through this round.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>nav</code></summary>
                        <p>The very last semantic tag is gone. It's just pure functionality now.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>table</code></summary>
                        <p>Long rendered useless by the absence of all its child tags, table takes its final bow.</p>
                    </details>
                </li>
                <li>
                    <details open>
                        <summary><code>span</code></summary>
                        <p>Not only did <code>span</code> lose to <code>div</code>, it came dead last in game 1. An ignominous fate.</p>
                    </details>
                </li>
            </ul>
        </div>

        <div class="tournament-round">
            <h2><a href="https://twitter.com/seldo/status/1461428057550430214"><span>Round 5</span></a></h2>

            <p>The version of HTML presented by round 5 reveals some uncomfortable truths about ourselves as developers. We threw out accessibility, semantic markup, discoverability, even style sheets. The remaining tags can build a web app -- you've still got <code>canvas</code>, so quite a fancy web app -- sure, but at what cost? And why the fuck is <code>marquee</code> still here?</p>

            <p>Throwing away half of these tags is going to be a nightmare.</p>

            <%- include('_includes/round', {scores: scores, round: 5, size: 'big'}); %>
        </div>
        
        <div class="commentary">
            <h2>Round 5 exits</h2>

            <ul>
                <li>
                    <details open>
                        <summary><code>img</code></summary>
                        <p>The grand-daddy of the commercial web, the image tag, has been cruelly dispatched. Sure, you can bring in images using style attributes on a <code>div</code>, but where's the dignity?</p>
                    </details>
                </li>        
                <li>
                    <details open>
                        <summary><code>button</code> & <code>input</code></summary>
                        <p>The final form elements bite the dust. Good luck capturing any user input, motherfuckers.</p>
                    </details>
                </li>        
                <li>
                    <details open>
                        <summary><code>canvas</code></summary>
                        <p>The powerful, flexible canvas, its own weird universe of APIs, has a ton of fans, as evidenced by it sticking it out all the way until now. But it didn't make the final 4.</p>
                    </details>
                </li>                                
            </ul>
        </div>

        <div class="tournament-round">
            <h2><a href="https://twitter.com/seldo/status/1461787400070438914"><span>Final 4</span></a></h2>

            <p>This version of HTML is a nightmare. To do anything vaguely useful you have to resort to horrible hacks, and of course, because web developers are who we are, that's what people started doing at this point in the competition:
                <ul class="actual-list">
                    <li>Félix started it by <a href="https://twitter.com/passcod/status/1461984560640454658">building a clock using only the script tag</a></li>
                    <li>Jamie took this one step further, showing you could use script tags, and <b>only</b> script tags, <a href="https://twitter.com/buildsghost/status/1461797915828047872">to capture user input</a>.</li>
                    <li>Not to be outdone, Alex built <a href="https://twitter.com/alexwlchan/status/1462010718576910340">a functional spaceship game using only the marquee tag</a>, truly an abomination, yet very impressive.</li>
                </ul>
            </p>

            <p>The final 4 had been predicted 3 rounds earlier by <a href="https://twitter.com/citizen_of_now/status/1461977081080913924">Howard</a>, and his reward was a donation in his name to <a href="https://codebar.io/">Codebar</a>, which he matched with his own funds, because he's a good sport.</p>

            <dl class="match finals">
                <dt>Final four</dt>
                <dd class="first">
                    <code>a</code>
                    <data>41.1%</data>
                </dd>
                <dd class="second">
                    <code>marquee</code>
                    <data>26.1%</data>
                </dd>
                <dd class="third">
                    <code>div</code>
                    <data>19.6%</data>
                </dd>
                <dd class="fourth">
                    <code>script</code>
                    <data>13.2%</data>
                </dd>
            </dl>
        </div>
        
        <div class="commentary">
            <h2>Final 4 exits</h2>

            <ul>
                <li>
                    <details open>
                        <summary><code>div</code></summary>
                        <p>The mighty have fallen! A lot of people were worried (or gleeful) that <code>div</code> was gonna take the whole tournament, but it was not to be, primarily because of the by-now unstoppable force of meme voters piling on to <code>marquee</code>, <a href="https://twitter.com/tsunamino/status/1460754397055488003">especially</a> <a href="https://twitter.com/tsunamino/status/1461116066113880064">Danielle</a> <a href="https://twitter.com/tsunamino/status/1461429962708193280">Leong</a></p>
                    </details>
                </li>        
                <li>
                    <details open>
                        <summary><code>script</code></summary>
                        <p>You'd think the ejection of <code>script</code> would mean the end of JavaScript shenanigans, but Alex's <a href="http://marquee-rocket.glitch.me/">all-marquee rocket ship</a> disproves that.</p>
                    </details>
                </li>                        
            </ul>
        </div>

        <div class="tournament-round">
            <h2><a href="https://twitter.com/seldo/status/1462149025633746951"><span>Championship</span></a></h2>

            <p>It all came down to a choice, emblamatic of the times we live in.</p>

            <p>In one corner, the <span>a</span> tag. The H in HTML and HTTP, the basis of web 1.0, the thing that makes the web a web. A semantic tag of unmatched simplicity, purity and power, it says "the words in this tag are related to this URL". That relationship <em>is</em> the web.</p>
                
            <p>In the other corner, <span>marquee</span>, a useless remnant of the browser wars of the 90s, propelled to the final round through a combination of nostalgia for a simpler time and simply for the lulz.</p>
                
            <p>Would reality win over memes? It was a very 2021 question.</p>

            <dl class="match finals">
                <dt>Championship</dt>
                <dd class="first">
                    <code>a</code>
                    <data>71.3%</data>
                </dd>
                <dd class="second">
                    <code>marquee</code>
                    <data>28.7%</data>
                </dd>
            </dl>
        </div>
        
        <div id="winner">
            <!-- I'm sorry -->
            <marquee><h2>The winner</h2></marquee>

            <h2 id="trophy"><code>a</code></h2>

            <p>And that was it. After 57 polls, 7 rounds, and over 76,000 votes cast, we had our champion. To my enormous relief, <code>a</code> was our victor. It's just not a web without it.</p>

            <p>Thanks to everyone who voted, this competition was enormous fun.</p>
        </div>

    </section>

    <footer>
        <small>Copyright &copy; 2021-2022 <a href="https://twitter.com/seldo">@seldo</a><br>
        This site contains <a href="https://github.com/seldo/the-angle-bracket">no JavaScript</a>.</small>
    </footer>

</body>
</html>
